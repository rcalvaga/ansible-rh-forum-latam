#!/usr/bin/env ansible-playbook
---
- name: CloudForms{{ ':' }} LATAM Red Hat Forum 2016
  hosts: localhost
  connection: local
  vars:
     domain: latam.forum.redhat.com
     username: demo
     password: r3dh4t1!
     cloudforms_full_url: https://cloudforms1.{{ domain }}
     cloudforms_username: admin
     cloudforms_password: smartvm
     cloudforms_http_type: https
  tasks: 
     - name: Wait for CloudForms to be up{{ ':' }} {{ cloudforms_full_url }}
       uri: url='{{ cloudforms_full_url }}' validate_certs=no status_code=200 
       register: cloudforms_wait
       until: cloudforms_wait.status == 200
       retries: 60
       delay: 10
       tags: 
          - install

     - name: Fetch a Token from Management Infrastructure
       command: oc serviceaccounts get-token management-admin --namespace management-infra
       register: management_infra_token
       tags: 
          - install
    
     - name: Adding {{ username }} user to CloudForms
       uri:
         method: POST
         body_format: json
         HEADER_Content-Type: application/json
         validate_certs: no
         return_content: yes
         url: "{{ cloudforms_full_url }}/api/users/"
         user: "{{ cloudforms_username }}"
         password: "{{ cloudforms_password }}"
         force_basic_auth: yes
         status_code: 200
         body: '{"name": "Forum Admin","userid": "{{ username }}","password": "{{ password }}","email": "{{ username }}@{{ openshift_domain }}","group": {"id": 1000000000002}}'
       tags:
            - install
            - configcloudforms
            - createuserscloudforms        
       
     - name: Adding Red Hat Forum LATAM 2016 Tenant to CloudForms
       uri:
         method: POST
         body_format: json
         HEADER_Content-Type: application/json
         validate_certs: no
         return_content: yes
         url: "{{ cloudforms_full_url }}/api/tenants/"
         user: "{{ cloudforms_username }}"
         password: "{{ cloudforms_password }}"
         force_basic_auth: yes
         status_code: 200
         body: '{"name": "RHT Forum Tenant","description": "Red Hat Forum LATAM 2016 Tenant","parent": {"href": "{{ cloudforms_full_url }}/api/tenants/1000000000001"}}'
       tags:
            - install
            - configcloudforms
            - createtenantscloudforms   
            
     - name: Adding OpenShift Container Platform Provider to CloudForms
       uri:
         method: POST
         body_format: json
         HEADER_Content-Type: application/json
         validate_certs: no
         return_content: yes
         url: "{{ cloudforms_full_url }}/api/providers/"
         user: "{{ cloudforms_username }}"
         password: "{{ cloudforms_password }}"
         force_basic_auth: yes
         status_code: 200
         body: '{"type":"ManageIQ::Providers::OpenshiftEnterprise::ContainerManager","tenant_id":1000000000002,"name":"OpenShift 3.4 Container Platform","connection_configurations" : [{"endpoint": {"role": "default","hostname":"openshift.default.svc.cluster.local","port":"443"},"authentication": {"role": "bearer","auth_key": "{{ management_infra_token.stdout }}"}},{"endpoint": {"role": "hawkular","hostname":"hawkular-metrics.openshift-infra.svc.cluster.local","port": "443"},"authentication": {"role": "hawkular","auth_key": "{{ management_infra_token.stdout }}"}}]}'
       tags:
            - install
            - configcloudforms
            - createproviderscloudforms 
            
     - name: Adding Ansible Tower Provider to CloudForms
       uri:
         method: POST
         body_format: json
         HEADER_Content-Type: application/json
         validate_certs: no
         return_content: yes
         url: "{{ cloudforms_full_url }}/api/providers?provider_class=provider"
         user: "{{ cloudforms_username }}"
         password: "{{ cloudforms_password }}"
         force_basic_auth: yes
         status_code: 200
         body: '{"type":"ManageIQ::Providers::AnsibleTower::Provider","name":"Ansible Tower 3","url":"http://tower.ansible-tower.svc.cluster.local/api/v1","credentials": {"userid":"admin","password":"password"}}'
       tags:
            - install
            - configcloudforms
            - createproviderscloudforms
 

     - name: Adding Service Catalog to CloudForms
       uri:
         method: POST
         body_format: json
         HEADER_Content-Type: application/json
         validate_certs: no
         return_content: yes
         url: "{{ cloudforms_full_url }}/api/service_catalogs"
         user: "{{ cloudforms_username }}"
         password: "{{ cloudforms_password }}"
         force_basic_auth: yes
         status_code: 200
         body: '{"action": "create","resource": {"name": "Ansible Tower Service Catalog","description": "Run Job Templates via Ansible Tower Service Catalog"}}'
       tags:
            - install
            - configcloudforms
            - createcatalogscloudforms
